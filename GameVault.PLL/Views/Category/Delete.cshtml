@model GameVault.BLL.ModelVM.Category.CategoryDTO

@{
    ViewData["Title"] = "Delete Category";
}

<h2>Delete Category</h2>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">@ViewBag.Error</div>
}

<div class="alert alert-warning">
    <h4>Are you sure you want to delete this categry?</h4>
</div>

<div class="mb-3"><strong>Name:</strong> @Model.Category_Id</div>

<form asp-action="DeleteConfirmed" method="DELETE">
    <input type="hidden" asp-for="Category_Id" />
    <button type="submit" id="formSubmit" class="btn btn-danger">Delete</button>
    <a asp-action="GetAllCategories" class="btn btn-secondary">Cancel</a>
</form>
<script>
    document.getElementById('formSubmit').addEventListener('click', async function (e) {
        e.preventDefault();
        try {
            const response = await fetch('http://localhost:44341/Category/DeleteConfirmed', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    Category_Id: @Model.Category_Id
                })
            });
            if (response.ok) {
                window.location.href = '/Category/GetAllCategories';
            } else {
                const errorData = await response.json();
                alert(errorData.message || 'An error occurred while deleting the category.');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An unexpected error occurred.');
        }
	});
</script>
